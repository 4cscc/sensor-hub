CREATED BY

ENTRYPOINT ["/run.sh"]
USER 472
COPY ./run.sh /run.sh # buildkit
ARG RUN_SH=./packaging/docker/run.sh
EXPOSE map[3000/tcp:{}]
COPY /tmp/grafana/public ./public # buildkit
COPY /tmp/grafana/bin/grafana* /tmp/grafana/bin/*/grafana* ./bin/ # buildkit
RUN |2 GF_UID=472 GF_GID=0 /bin/sh -c if [ ! $(getent group "$GF_GID") ]; then       if grep -i -q alpine /etc/issue; then         addgroup -S -g $GF_GID grafana;       else         addgroup --system --gid $GF_GID grafana;       fi;     fi &&     GF_GID_NAME=$(getent group $GF_GID | cut -d':' -f1) &&     mkdir -p "$GF_PATHS_HOME/.aws" &&     if grep -i -q alpine /etc/issue; then       adduser -S -u $GF_UID -G "$GF_GID_NAME" grafana;     else       adduser --system --uid $GF_UID --ingroup "$GF_GID_NAME" grafana;     fi &&     mkdir -p "$GF_PATHS_PROVISIONING/datasources"              "$GF_PATHS_PROVISIONING/dashboards"              "$GF_PATHS_PROVISIONING/notifiers"              "$GF_PATHS_PROVISIONING/plugins"              "$GF_PATHS_PROVISIONING/access-control"              "$GF_PATHS_PROVISIONING/alerting"              "$GF_PATHS_LOGS"              "$GF_PATHS_PLUGINS"              "$GF_PATHS_DATA" &&     cp conf/sample.ini "$GF_PATHS_CONFIG" &&     cp conf/ldap.toml /etc/grafana/ldap.toml &&     chown -R "grafana:$GF_GID_NAME" "$GF_PATHS_DATA" "$GF_PATHS_HOME/.aws" "$GF_PATHS_LOGS" "$GF_PATHS_PLUGINS" "$GF_PATHS_PROVISIONING" &&     chmod -R 777 "$GF_PATHS_DATA" "$GF_PATHS_HOME/.aws" "$GF_PATHS_LOGS" "$GF_PATHS_PLUGINS" "$GF_PATHS_PROVISIONING" # buildkit
COPY /tmp/grafana/conf ./conf # buildkit
RUN |2 GF_UID=472 GF_GID=0 /bin/sh -c if grep -i -q alpine /etc/issue && [ `arch` = "x86_64" ]; then       wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub &&       wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r0/glibc-2.35-r0.apk         -O /tmp/glibc-2.35-r0.apk &&       wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r0/glibc-bin-2.35-r0.apk         -O /tmp/glibc-bin-2.35-r0.apk &&       apk add --force-overwrite --no-cache /tmp/glibc-2.35-r0.apk /tmp/glibc-bin-2.35-r0.apk &&       rm -f /lib64/ld-linux-x86-64.so.2 &&       ln -s /usr/glibc-compat/lib64/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2 &&       rm -f /tmp/glibc-2.35-r0.apk &&       rm -f /tmp/glibc-bin-2.35-r0.apk &&       rm -f /lib/ld-linux-x86-64.so.2 &&       rm -f /etc/ld.so.cache;     fi # buildkit
RUN |2 GF_UID=472 GF_GID=0 /bin/sh -c if grep -i -q alpine /etc/issue; then       apk add --no-cache ca-certificates bash curl tzdata musl-utils &&       apk info -vv | sort;     elif grep -i -q ubuntu /etc/issue; then       DEBIAN_FRONTEND=noninteractive &&       apt-get update &&       apt-get install -y ca-certificates curl tzdata &&       apt-get autoremove -y &&       rm -rf /var/lib/apt/lists/*;     else       echo 'ERROR: Unsupported base image' && /bin/false;     fi # buildkit
WORKDIR /usr/share/grafana
ENV PATH=/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin GF_PATHS_CONFIG=/etc/grafana/grafana.ini GF_PATHS_DATA=/var/lib/grafana GF_PATHS_HOME=/usr/share/grafana GF_PATHS_LOGS=/var/log/grafana GF_PATHS_PLUGINS=/var/lib/grafana/plugins GF_PATHS_PROVISIONING=/etc/grafana/provisioning
ARG GF_GID=0
ARG GF_UID=472
LABEL maintainer=Grafana Labs <hello@grafana.com>
/bin/sh -c #(nop)  CMD ["/bin/sh"]
/bin/sh -c #(nop) ADD file:959fa0ffb60c37c4fdc0d32ac31511f8dead32ef7f4bd848b11ff144a6b37012 in / 
